#!/bin/bash

# Script t·ª± ƒë·ªông c√†i ƒë·∫∑t v√† kh·ªüi ch·∫°y MTProxy t·ª´ GitHub
# PHI√äN B·∫¢N N√ÄY ƒê∆Ø·ª¢C T·ªêI ∆ØU D·ª∞A TR√äN PH·∫¢N H·ªíI:
# - S·ª≠ d·ª•ng repository GetPageSpeed/MTProxy
# - X·ª≠ l√Ω secret v√† ch·∫°y l·ªánh t∆∞∆°ng t·ª± phi√™n b·∫£n c≈©
# - Ki·ªÉm tra k·ªπ vi·ªác t·∫£i file proxy-multi.conf

# H√†m ghi log v√† hi·ªÉn th·ªã ra m√†n h√¨nh
log_and_echo() {
    echo "$1"
}

log_and_echo "=================================================="
log_and_echo "B·∫Øt ƒë·∫ßu qu√° tr√¨nh c√†i ƒë·∫∑t MTProxy (GetPageSpeed fork)..."
log_and_echo "Th·ªùi gian b·∫Øt ƒë·∫ßu: $(date)"
log_and_echo "=================================================="
echo ""

# --- B∆∞·ªõc 1: C·∫≠p nh·∫≠t h·ªá th·ªëng v√† c√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt ---
log_and_echo "[1/8] ƒêang c·∫≠p nh·∫≠t h·ªá th·ªëng v√† c√†i ƒë·∫∑t c√°c g√≥i ph·ª• thu·ªôc..."
export DEBIAN_FRONTEND=noninteractive
apt-get update -yqq > /dev/null 2>&1
if [ $? -ne 0 ]; then
    log_and_echo "L·ªñI: apt-get update th·∫•t b·∫°i."
    exit 1
fi
apt-get install -y -qq git curl build-essential libssl-dev zlib1g-dev make ufw > /dev/null 2>&1
if [ $? -ne 0 ]; then
    log_and_echo "L·ªñI: apt-get install th·∫•t b·∫°i."
    exit 1
fi
log_and_echo "C√†i ƒë·∫∑t g√≥i ph·ª• thu·ªôc th√†nh c√¥ng."
echo ""

# --- B∆∞·ªõc 2: T·∫£i m√£ ngu·ªìn MTProxy (GetPageSpeed fork) ---
log_and_echo "[2/8] ƒêang t·∫£i m√£ ngu·ªìn MTProxy (GetPageSpeed fork)..."
REPO_URL="https://github.com/GetPageSpeed/MTProxy"
REPO_DIR="/opt/MTProxy_GetPageSpeed"
if [ -d "$REPO_DIR" ]; then
  rm -rf "$REPO_DIR"
fi
git clone "$REPO_URL" "$REPO_DIR" > /dev/null 2>&1
if [ $? -ne 0 ]; then
    log_and_echo "L·ªñI: git clone th·∫•t b·∫°i. Ki·ªÉm tra URL repo ho·∫∑c k·∫øt n·ªëi m·∫°ng."
    exit 1
fi
log_and_echo "T·∫£i m√£ ngu·ªìn th√†nh c√¥ng v√†o $REPO_DIR."
echo ""

# --- B∆∞·ªõc 3: Bi√™n d·ªãch MTProxy ---
log_and_echo "[3/8] ƒêang bi√™n d·ªãch MTProxy..."
cd "$REPO_DIR" || { log_and_echo "L·ªñI: Kh√¥ng th·ªÉ cd v√†o $REPO_DIR"; exit 1; }
make > /dev/null 2>&1
if [ ! -f "objs/bin/mtproto-proxy" ]; then
    log_and_echo "L·ªñI: Bi√™n d·ªãch MTProxy th·∫•t b·∫°i."
    cd /
    exit 1
fi
log_and_echo "Bi√™n d·ªãch th√†nh c√¥ng."
echo ""

# --- B∆∞·ªõc 4: Chu·∫©n b·ªã file v√† th∆∞ m·ª•c th·ª±c thi ---
PROXY_EXEC_PATH="${REPO_DIR}/objs/bin/mtproto-proxy"
WORKING_DIR="${REPO_DIR}/objs/bin"
cd "$WORKING_DIR" || { log_and_echo "L·ªñI: Kh√¥ng th·ªÉ cd v√†o $WORKING_DIR"; exit 1; }
log_and_echo "[4/8] ƒêang chu·∫©n b·ªã trong th∆∞ m·ª•c: $(pwd)"
echo ""

# --- B∆∞·ªõc 5: T·∫°o client secret v√† t·∫£i official proxy secret/config ---
log_and_echo "[5/8] ƒêang t·∫°o client secret v√† t·∫£i official proxy secret/config..."
NEW_CLIENT_SECRET=$(head -c 16 /dev/urandom | xxd -p -c 16)

log_and_echo "T·∫£i official-proxy-secret t·ª´ core.telegram.org..."
curl -sS --fail https://core.telegram.org/getProxySecret -o official-proxy-secret
if [ $? -ne 0 ] || [ ! -s official-proxy-secret ]; then
    log_and_echo "C·∫¢NH B√ÅO QUAN TR·ªåNG: Kh√¥ng t·∫£i ƒë∆∞·ª£c official-proxy-secret."
    log_and_echo "Proxy c√≥ th·ªÉ kh√¥ng ho·∫°t ƒë·ªông ƒë√∫ng n·∫øu kh√¥ng c√≥ file n√†y."
    # Kh√¥ng exit, nh∆∞ng c·∫£nh b√°o r√µ
fi

log_and_echo "T·∫£i proxy-multi.conf t·ª´ core.telegram.org..."
curl -sS --fail https://core.telegram.org/getProxyConfig -o proxy-multi.conf
if [ $? -ne 0 ] || [ ! -s proxy-multi.conf ]; then # Check curl exit status AND if file is not empty
    log_and_echo "L·ªñI QUAN TR·ªåNG: Kh√¥ng t·∫£i ƒë∆∞·ª£c proxy-multi.conf t·ª´ Telegram."
    log_and_echo "Proxy s·∫Ω kh√¥ng th·ªÉ ho·∫°t ƒë·ªông n·∫øu kh√¥ng c√≥ file n√†y ho·∫∑c file n√†y kh√¥ng ƒë√∫ng."
    log_and_echo "Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi m·∫°ng c·ªßa VPS v√† th·ª≠ ch·∫°y l·∫°i script."
    log_and_echo "B·∫°n c≈©ng c√≥ th·ªÉ th·ª≠ t·∫£i th·ªß c√¥ng: curl -o ${WORKING_DIR}/proxy-multi.conf https://core.telegram.org/getProxyConfig"
    exit 1 # Tho√°t script v√¨ ƒë√¢y l√† l·ªói nghi√™m tr·ªçng
fi
log_and_echo "T·∫°o client secret v√† t·∫£i file c·∫•u h√¨nh th√†nh c√¥ng."
log_and_echo "Client Secret m·ªõi: $NEW_CLIENT_SECRET"
echo ""

# --- B∆∞·ªõc 6: T·∫°o port ng·∫´u nhi√™n ---
log_and_echo "[6/8] ƒêang t·∫°o port ng·∫´u nhi√™n..."
RANDOM_PORT=$(shuf -i 10000-65535 -n 1)
log_and_echo "Port ng·∫´u nhi√™n m·ªõi: $RANDOM_PORT"
echo ""

# --- B∆∞·ªõc 7: M·ªü port tr√™n Firewall (UFW) ---
log_and_echo "[7/8] ƒêang m·ªü port $RANDOM_PORT tr√™n Firewall (UFW)..."
if ! command -v ufw > /dev/null; then
    log_and_echo "C·∫£nh b√°o: ufw ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t."
else
    if ! ufw status | grep -qw active; then
        log_and_echo "UFW ch∆∞a active. ƒêang k√≠ch ho·∫°t v√† cho ph√©p SSH..."
        ufw allow ssh > /dev/null 2>&1
        ufw --force enable > /dev/null 2>&1
    fi
    ufw allow ${RANDOM_PORT}/tcp > /dev/null 2>&1
    ufw reload > /dev/null 2>&1
    log_and_echo "ƒê√£ th√™m rule cho port $RANDOM_PORT/tcp v√† reload UFW."
fi
echo ""

# --- B∆∞·ªõc 8: L·∫•y ƒë·ªãa ch·ªâ IP public c·ªßa m√°y ch·ªß ---
log_and_echo "[8/8] ƒêang l·∫•y ƒë·ªãa ch·ªâ IP public c·ªßa m√°y ch·ªß..."
SERVER_IP=$(curl -s --max-time 10 ifconfig.me/ip || curl -s --max-time 10 api.ipify.org || hostname -I | awk '{print $1}')
if [ -z "$SERVER_IP" ]; then
    log_and_echo "C·∫¢NH B√ÅO: Kh√¥ng th·ªÉ t·ª± ƒë·ªông l·∫•y ƒë·ªãa ch·ªâ IP. Link c√≥ th·ªÉ kh√¥ng ch√≠nh x√°c."
    SERVER_IP="YOUR_SERVER_IP"
fi
log_and_echo "ƒê·ªãa ch·ªâ IP c·ªßa m√°y ch·ªß: $SERVER_IP"
echo ""

# --- Chu·∫©n b·ªã th√¥ng tin ch·∫°y v√† link ---
PROXY_RUN_COMMAND="${PROXY_EXEC_PATH} -u nobody -p 8888 -H ${RANDOM_PORT} -S ${NEW_CLIENT_SECRET} --aes-pwd official-proxy-secret proxy-multi.conf -M 1"
TG_LINK="tg://proxy?server=${SERVER_IP}&port=${RANDOM_PORT}&secret=${NEW_CLIENT_SECRET}"
LOG_PROXY_OUTPUT_FILE="${WORKING_DIR}/mtproxy_runtime.log"

log_and_echo "===================================================================="
log_and_echo "C√ÄI ƒê·∫∂T HO√ÄN T·∫§T! ƒêANG CHU·∫®N B·ªä KH·ªûI CH·∫†Y..."
log_and_echo "===================================================================="
log_and_echo "--------------------------------------------------------------------"
log_and_echo "L·ªánh ch·∫°y proxy (s·∫Ω t·ª± ƒë·ªông ch·∫°y ·ªü n·ªÅn):"
log_and_echo "   nohup ${PROXY_RUN_COMMAND} > ${LOG_PROXY_OUTPUT_FILE} 2>&1 &"
log_and_echo "   (Log c·ªßa proxy s·∫Ω ƒë∆∞·ª£c l∆∞u t·∫°i: ${LOG_PROXY_OUTPUT_FILE})"
log_and_echo "--------------------------------------------------------------------"
echo ""

# --- B∆Ø·ªöC CU·ªêI: T·ª∞ ƒê·ªòNG KH·ªûI CH·∫†Y PROXY ---
log_and_echo "ƒêang kh·ªüi ch·∫°y proxy ·ªü ch·∫ø ƒë·ªô n·ªÅn..."
cd "$WORKING_DIR" || exit
# X√≥a log c≈© tr∆∞·ªõc khi ch·∫°y m·ªõi
if [ -f "${LOG_PROXY_OUTPUT_FILE}" ]; then
    rm -f "${LOG_PROXY_OUTPUT_FILE}"
fi
nohup ${PROXY_RUN_COMMAND} > ${LOG_PROXY_OUTPUT_FILE} 2>&1 &

# Ch·ªù v√† ki·ªÉm tra nhi·ªÅu l·∫ßn
PROXY_RUNNING=false
ATTEMPTS=0
MAX_ATTEMPTS=5
SLEEP_INTERVAL=4

log_and_echo "ƒêang ki·ªÉm tra tr·∫°ng th√°i proxy (trong v√≤ng $((MAX_ATTEMPTS * SLEEP_INTERVAL)) gi√¢y)..."
while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
    sleep $SLEEP_INTERVAL
    if ss -tlpn | grep -q ":${RANDOM_PORT}"; then
        PROXY_RUNNING=true
        break
    fi
    ATTEMPTS=$((ATTEMPTS + 1))
    if [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; then
      log_and_echo "Ki·ªÉm tra l·∫ßn $((ATTEMPTS +1 ))... (ƒë√£ ch·ªù $(($ATTEMPTS * $SLEEP_INTERVAL)) gi√¢y)"
    fi
done

if ${PROXY_RUNNING}; then
    log_and_echo "‚úÖ TH√ÄNH C√îNG: Proxy MTProto d∆∞·ªùng nh∆∞ ƒë√£ ƒë∆∞·ª£c kh·ªüi ch·∫°y v√† ƒëang l·∫Øng nghe tr√™n port ${RANDOM_PORT}."
else
    log_and_echo "‚ö†Ô∏è C·∫¢NH B√ÅO: Script kh√¥ng th·ªÉ t·ª± ƒë·ªông x√°c nh·∫≠n proxy ƒëang ch·∫°y tr√™n port ${RANDOM_PORT}."
    log_and_echo "Tuy nhi√™n, proxy C√ì TH·ªÇ V·∫™N ƒêANG HO·∫†T ƒê·ªòNG B√åNH TH∆Ø·ªúNG N·∫æU KH√îNG C√ì L·ªñI NGHI√äM TR·ªåNG TRONG LOG."
    log_and_echo "H√ÉY TH·ª¨ K·∫æT N·ªêI B·∫∞NG LINK TELEGRAM ƒê∆Ø·ª¢C CUNG C·∫§P (s·∫Ω hi·ªÉn th·ªã ·ªü cu·ªëi)."
    log_and_echo "KI·ªÇM TRA K·ª∏ file log ƒë·ªÉ bi·∫øt chi ti·∫øt:"
    log_and_echo "   cat ${LOG_PROXY_OUTPUT_FILE}"
fi

echo ""
log_and_echo "=================================================="
log_and_echo "Script ƒë√£ ho√†n t·∫•t: $(date)"
log_and_echo "=================================================="
log_and_echo "üîó LINK K·∫æT N·ªêI TELEGRAM"
log_and_echo "{TG_LINK}"
log_and_echo "=================================================="
echo ""
log_and_echo "---------------------------------------------------------------------"
log_and_echo "TH√îNG TIN H·ªñ TR·ª¢ & LI√äN H·ªÜ:"
log_and_echo "Telegram: @thevv"
log_and_echo "Email: vuvanthe64@gmail.com"
log_and_echo "---------------------------------------------------------------------"
echo ""

exit 0
